{"ast":null,"code":"var _jsxFileName = \"/Users/steelyphil/Desktop/PhilipNguyenPortfolio/client/src/components/ContactMeForm.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default function ContactMeForm({\n  open,\n  handleClose\n}) {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  const handleEmail = e => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        title,\n        message\n      })\n    };\n    fetch('/api/sendemail', requestOptions).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n    handleClose();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"contact-me-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"contact-me-title\",\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Contact me\"), __jsx(\"form\", {\n    onSubmit: e => handleEmail(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Name\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"name-input\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"email-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"email-input\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"title-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Title\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"title-input\",\n    value: title,\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    htmlFor: \"message-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Message\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"message-input\",\n    value: message,\n    onChange: e => {\n      setMessage(e.target.value);\n    },\n    multiline: true,\n    rows: 4,\n    label: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Email me\")))));\n}","map":{"version":3,"sources":["/Users/steelyphil/Desktop/PhilipNguyenPortfolio/client/src/components/ContactMeForm.jsx"],"names":["React","useState","withStyles","makeStyles","Button","Dialog","FormControl","InputLabel","OutlinedInput","MuiDialogTitle","MuiDialogActions","IconButton","CloseIcon","Typography","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogActions","ContactMeForm","open","handleClose","name","setName","email","setEmail","title","setTitle","message","setMessage","handleEmail","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","data","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function ContactMeForm({ open, handleClose }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [title, setTitle] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleEmail = (e) => {\n    e.preventDefault();\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name, email, title, message })\n    }\n    fetch('/api/sendemail', requestOptions)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n      })\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog onClose={handleClose} aria-labelledby=\"contact-me-title\" open={open}>\n        <DialogTitle id=\"contact-me-title\" onClose={handleClose}>\n          Contact me\n        </DialogTitle>\n        <form onSubmit={(e) => handleEmail(e)}>\n          <FormControl variant=\"outlined\" className='w-100'>\n            <InputLabel htmlFor=\"name-input\">Name</InputLabel>\n            <OutlinedInput\n              required\n              id=\"name-input\"\n              value={name}\n              onChange={(e) => { setName(e.target.value) }}\n              className='textFieldMargin'\n              label=\"Name\" />\n          </FormControl>\n          <FormControl variant=\"outlined\" className='w-100'>\n            <InputLabel htmlFor=\"email-input\">Email</InputLabel>\n            <OutlinedInput\n              required\n              id=\"email-input\"\n              value={email}\n              onChange={(e) => { setEmail(e.target.value) }}\n              className='textFieldMargin'\n              label=\"Email\" />\n          </FormControl>\n          <FormControl variant=\"outlined\" className='w-100'>\n            <InputLabel htmlFor=\"title-input\">Title</InputLabel>\n            <OutlinedInput\n              required\n              id=\"title-input\"\n              value={title}\n              onChange={(e) => { setTitle(e.target.value) }}\n              className='textFieldMargin'\n              label=\"Title\" />\n          </FormControl>\n          <FormControl variant=\"outlined\" className='w-100'>\n            <InputLabel htmlFor=\"message-input\">Message</InputLabel>\n            <OutlinedInput\n              required\n              id=\"message-input\"\n              value={message}\n              onChange={(e) => { setMessage(e.target.value) }}\n              multiline\n              rows={4}\n              label=\"Message\" />\n          </FormControl>\n          <DialogActions>\n            <Button autoFocus type='submit' color=\"primary\">\n              Email me\n          </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}