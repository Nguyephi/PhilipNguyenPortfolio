{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  };\n};\n\nvar DialogTitle = withStyles(styles)(function (props) {\n  var children = props.children,\n      classes = props.classes,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClose\"]);\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other), __jsx(Typography, {\n    variant: \"h6\"\n  }, children), onClose ? __jsx(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose\n  }, __jsx(CloseIcon, null)) : null);\n});\nvar DialogActions = withStyles(function (theme) {\n  return {\n    root: {\n      margin: 0,\n      padding: theme.spacing(1)\n    }\n  };\n})(MuiDialogActions);\nexport default function ContactMeForm(_ref) {\n  var open = _ref.open,\n      handleClose = _ref.handleClose;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(''),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var _useState4 = useState(''),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var handleEmail = function handleEmail(e) {\n    e.preventDefault();\n    var requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        title: title,\n        message: message\n      })\n    };\n    fetch('/api/sendemail', requestOptions).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      console.log(data);\n    });\n    handleClose();\n  };\n\n  return __jsx(\"div\", null, __jsx(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"contact-me-title\",\n    open: open\n  }, __jsx(DialogTitle, {\n    id: \"contact-me-title\",\n    onClose: handleClose\n  }, \"Contact me\"), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return handleEmail(e);\n    }\n  }, __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"name-input\"\n  }, \"Name\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"name-input\",\n    value: name,\n    onChange: function onChange(e) {\n      setName(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Name\"\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"email-input\"\n  }, \"Email\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"email-input\",\n    value: email,\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Email\"\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"title-input\"\n  }, \"Title\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"title-input\",\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    className: \"textFieldMargin\",\n    label: \"Title\"\n  })), __jsx(FormControl, {\n    variant: \"outlined\",\n    className: \"w-100\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"message-input\"\n  }, \"Message\"), __jsx(OutlinedInput, {\n    required: true,\n    id: \"message-input\",\n    value: message,\n    onChange: function onChange(e) {\n      setMessage(e.target.value);\n    },\n    multiline: true,\n    rows: 4,\n    label: \"Message\"\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    autoFocus: true,\n    type: \"submit\",\n    color: \"primary\"\n  }, \"Email me\")))));\n}","map":null,"metadata":{},"sourceType":"module"}